-- =====================================================
-- SCRIPT: 08_views.sql
-- PROPOSITO: Crear vistas útiles para consultas de negocio
-- AUTOR: Daniel Arevalo - Alex Hernandez
-- FECHA: Junio 2025
-- =====================================================

-- Vista completa de vehículos con todos los datos desnormalizados
CREATE OR REPLACE VIEW VW_VEHICLES_COMPLETE AS
SELECT 
   v.ID,
   v.URL,
   r.REGION,
   r.COUNTRY,
   r.STATE_DATA AS STATE,
   v.PRICE,
   v.YEAR,
   m.NAME AS MANUFACTURER,
   v.MODEL,
   c.NAME AS CONDITION,
   cy.NAME AS CYLINDERS,
   f.NAME AS FUEL,
   v.ODOMETER,
   ts.NAME AS TITLE_STATUS,
   tr.NAME AS TRANSMISSION,
   v.VIN,
   d.NAME AS DRIVE,
   s.NAME AS SIZE_CATEGORY,
   t.NAME AS TYPE_CATEGORY,
   pc.NAME AS PAINT_COLOR,
   v.IMAGE_URL,
   SUBSTR(v.DESCRIPTION_DATA, 1, 200) AS DESCRIPTION_PREVIEW,
   v.POSTING_DATE
FROM VEHICLES v
LEFT JOIN REGIONS r ON v.REGION_ID = r.ID
LEFT JOIN MANUFACTURERS m ON v.MANUFACTURER_ID = m.ID
LEFT JOIN CONDITIONS c ON v.CONDITION_ID = c.ID
LEFT JOIN CYLINDERS cy ON v.CYLINDERS_ID = cy.ID
LEFT JOIN FUELS f ON v.FUEL_ID = f.ID
LEFT JOIN TITLE_STATUSES ts ON v.TITLE_STATUS_ID = ts.ID
LEFT JOIN TRANSMISSIONS tr ON v.TRANSMISSION_ID = tr.ID
LEFT JOIN DRIVES d ON v.DRIVE_ID = d.ID
LEFT JOIN SIZES s ON v.SIZE_ID = s.ID
LEFT JOIN TYPES t ON v.TYPE_ID = t.ID
LEFT JOIN PAINT_COLORS pc ON v.PAINT_COLOR_ID = pc.ID;

-- Vista de estadísticas por fabricante
CREATE OR REPLACE VIEW VW_STATS_BY_MANUFACTURER AS
SELECT 
   m.NAME AS MANUFACTURER,
   COUNT(*) AS TOTAL_VEHICLES,
   ROUND(AVG(v.PRICE), 2) AS AVG_PRICE,
   MIN(v.PRICE) AS MIN_PRICE,
   MAX(v.PRICE) AS MAX_PRICE,
   ROUND(AVG(v.YEAR), 0) AS AVG_YEAR,
   MIN(v.YEAR) AS MIN_YEAR,
   MAX(v.YEAR) AS MAX_YEAR,
   ROUND(AVG(v.ODOMETER), 0) AS AVG_ODOMETER
FROM VEHICLES v
INNER JOIN MANUFACTURERS m ON v.MANUFACTURER_ID = m.ID
WHERE v.PRICE IS NOT NULL
GROUP BY m.NAME
ORDER BY COUNT(*) DESC;

-- Vista de estadísticas por región
CREATE OR REPLACE VIEW VW_STATS_BY_REGION AS
SELECT 
   r.REGION,
   r.COUNTRY,
   r.STATE_DATA AS STATE,
   COUNT(*) AS TOTAL_VEHICLES,
   ROUND(AVG(v.PRICE), 2) AS AVG_PRICE,
   MIN(v.PRICE) AS MIN_PRICE,
   MAX(v.PRICE) AS MAX_PRICE
FROM VEHICLES v
INNER JOIN REGIONS r ON v.REGION_ID = r.ID
WHERE v.PRICE IS NOT NULL
GROUP BY r.REGION, r.COUNTRY, r.STATE_DATA
ORDER BY COUNT(*) DESC;

-- Vista de vehículos por año
CREATE OR REPLACE VIEW VW_VEHICLES_BY_YEAR AS
SELECT 
   v.YEAR,
   COUNT(*) AS TOTAL_VEHICLES,
   ROUND(AVG(v.PRICE), 2) AS AVG_PRICE,
   COUNT(DISTINCT v.MANUFACTURER_ID) AS UNIQUE_MANUFACTURERS
FROM VEHICLES v
WHERE v.YEAR IS NOT NULL
GROUP BY v.YEAR
ORDER BY v.YEAR DESC;

-- Vista de vehículos disponibles (con filtros básicos)
CREATE OR REPLACE VIEW VW_VEHICLES_AVAILABLE AS
SELECT 
   v.ID,
   m.NAME AS MANUFACTURER,
   v.MODEL,
   v.YEAR,
   v.PRICE,
   v.ODOMETER,
   c.NAME AS CONDITION,
   f.NAME AS FUEL,
   tr.NAME AS TRANSMISSION,
   r.REGION,
   r.STATE_DATA AS STATE,
   v.POSTING_DATE
FROM VEHICLES v
LEFT JOIN MANUFACTURERS m ON v.MANUFACTURER_ID = m.ID
LEFT JOIN CONDITIONS c ON v.CONDITION_ID = c.ID
LEFT JOIN FUELS f ON v.FUEL_ID = f.ID
LEFT JOIN TRANSMISSIONS tr ON v.TRANSMISSION_ID = tr.ID
LEFT JOIN REGIONS r ON v.REGION_ID = r.ID
WHERE v.PRICE IS NOT NULL 
  AND v.PRICE > 0
  AND v.YEAR IS NOT NULL
ORDER BY v.POSTING_DATE DESC;

-- Vista resumen de catálogos
CREATE OR REPLACE VIEW VW_CATALOG_SUMMARY AS
SELECT 'MANUFACTURERS' AS CATALOG, COUNT(*) AS TOTAL FROM MANUFACTURERS
UNION ALL
SELECT 'REGIONS', COUNT(*) FROM REGIONS
UNION ALL
SELECT 'CONDITIONS', COUNT(*) FROM CONDITIONS
UNION ALL
SELECT 'FUELS', COUNT(*) FROM FUELS
UNION ALL
SELECT 'TRANSMISSIONS', COUNT(*) FROM TRANSMISSIONS
UNION ALL
SELECT 'TYPES', COUNT(*) FROM TYPES
UNION ALL
SELECT 'PAINT_COLORS', COUNT(*) FROM PAINT_COLORS
UNION ALL
SELECT 'VEHICLES', COUNT(*) FROM VEHICLES;

COMMIT;
