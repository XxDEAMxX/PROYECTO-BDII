-- =====================================================
-- SCRIPT: 09_sample_queries.sql
-- PROPOSITO: Consultas de ejemplo y verificación del sistema
-- AUTOR: Daniel Arevalo - Alex Hernandez
-- FECHA: Junio 2025
-- =====================================================

-- Consultas básicas de verificación
PROMPT === CONSULTAS DE VERIFICACIÓN ===

-- 1. Verificar conteos por tabla
SELECT 'TMP_CRAIGSLIST_VEHICLES' AS TABLA, COUNT(*) AS REGISTROS FROM TMP_CRAIGSLIST_VEHICLES
UNION ALL
SELECT 'VEHICLES', COUNT(*) FROM VEHICLES
UNION ALL
SELECT 'REGIONS', COUNT(*) FROM REGIONS
UNION ALL
SELECT 'MANUFACTURERS', COUNT(*) FROM MANUFACTURERS
ORDER BY 1;

-- 2. Top 10 fabricantes con más vehículos
PROMPT 
PROMPT === TOP 10 FABRICANTES ===
SELECT * FROM (
   SELECT 
      m.NAME AS FABRICANTE,
      COUNT(*) AS TOTAL_VEHICULOS,
      ROUND(AVG(v.PRICE), 2) AS PRECIO_PROMEDIO
   FROM VEHICLES v
   INNER JOIN MANUFACTURERS m ON v.MANUFACTURER_ID = m.ID
   WHERE v.PRICE IS NOT NULL
   GROUP BY m.NAME
   ORDER BY COUNT(*) DESC
) WHERE ROWNUM <= 10;

-- 3. Distribución por años
PROMPT 
PROMPT === VEHÍCULOS POR AÑO (ÚLTIMOS 10 AÑOS) ===
SELECT 
   YEAR AS AÑO,
   TOTAL_VEHICLES AS TOTAL_VEHICULOS,
   AVG_PRICE AS PRECIO_PROMEDIO
FROM VW_VEHICLES_BY_YEAR
WHERE ROWNUM <= 10;

-- 4. Top 5 regiones con más vehículos
PROMPT 
PROMPT === TOP 5 REGIONES ===
SELECT * FROM (
   SELECT 
      REGION,
      STATE,
      TOTAL_VEHICLES AS TOTAL_VEHICULOS,
      AVG_PRICE AS PRECIO_PROMEDIO
   FROM VW_STATS_BY_REGION
   ORDER BY TOTAL_VEHICLES DESC
) WHERE ROWNUM <= 5;

-- Consultas de análisis
PROMPT 
PROMPT === CONSULTAS DE ANÁLISIS ===

-- 5. Vehículos por tipo de combustible
SELECT 
   f.NAME AS TIPO_COMBUSTIBLE,
   COUNT(*) AS CANTIDAD,
   ROUND(AVG(v.PRICE), 2) AS PRECIO_PROMEDIO
FROM VEHICLES v
INNER JOIN FUELS f ON v.FUEL_ID = f.ID
WHERE v.PRICE IS NOT NULL
GROUP BY f.NAME
ORDER BY COUNT(*) DESC;

-- 6. Vehículos por transmisión
SELECT 
   tr.NAME AS TRANSMISION,
   COUNT(*) AS CANTIDAD,
   ROUND(AVG(v.PRICE), 2) AS PRECIO_PROMEDIO
FROM VEHICLES v
INNER JOIN TRANSMISSIONS tr ON v.TRANSMISSION_ID = tr.ID
WHERE v.PRICE IS NOT NULL
GROUP BY tr.NAME
ORDER BY COUNT(*) DESC;

-- 7. Análisis de precios por condición del vehículo
SELECT 
   c.NAME AS CONDICION,
   COUNT(*) AS CANTIDAD,
   ROUND(MIN(v.PRICE), 2) AS PRECIO_MINIMO,
   ROUND(AVG(v.PRICE), 2) AS PRECIO_PROMEDIO,
   ROUND(MAX(v.PRICE), 2) AS PRECIO_MAXIMO
FROM VEHICLES v
INNER JOIN CONDITIONS c ON v.CONDITION_ID = c.ID
WHERE v.PRICE IS NOT NULL AND v.PRICE > 0
GROUP BY c.NAME
ORDER BY AVG(v.PRICE) DESC;

-- Consultas específicas de negocio
PROMPT 
PROMPT === CONSULTAS ESPECÍFICAS ===

-- 8. Vehículos Toyota más baratos
SELECT 
   MANUFACTURER,
   MODEL,
   YEAR,
   PRICE AS PRECIO,
   ODOMETER AS KILOMETRAJE,
   CONDITION AS CONDICION,
   REGION
FROM VW_VEHICLES_COMPLETE
WHERE UPPER(MANUFACTURER) = 'TOYOTA'
  AND PRICE IS NOT NULL
  AND PRICE > 0
ORDER BY PRICE ASC
FETCH FIRST 10 ROWS ONLY;

-- 9. Vehículos de lujo (precio > $50,000)
SELECT 
   MANUFACTURER AS FABRICANTE,
   MODEL AS MODELO,
   YEAR AS AÑO,
   PRICE AS PRECIO,
   REGION,
   STATE
FROM VW_VEHICLES_COMPLETE
WHERE PRICE > 50000
ORDER BY PRICE DESC
FETCH FIRST 20 ROWS ONLY;

-- 10. Vehículos eléctricos o híbridos
SELECT 
   MANUFACTURER AS FABRICANTE,
   MODEL AS MODELO,
   YEAR AS AÑO,
   PRICE AS PRECIO,
   FUEL AS COMBUSTIBLE,
   REGION
FROM VW_VEHICLES_COMPLETE
WHERE UPPER(FUEL) LIKE '%ELECTRIC%' 
   OR UPPER(FUEL) LIKE '%HYBRID%'
   OR UPPER(MODEL) LIKE '%HYBRID%'
   OR UPPER(MODEL) LIKE '%ELECTRIC%'
ORDER BY YEAR DESC
FETCH FIRST 15 ROWS ONLY;

-- Consultas de validación de datos
PROMPT 
PROMPT === VALIDACIÓN DE DATOS ===

-- 11. Registros con valores nulos importantes
SELECT 
   'MANUFACTURER_ID' AS CAMPO,
   COUNT(*) AS NULOS
FROM VEHICLES WHERE MANUFACTURER_ID IS NULL
UNION ALL
SELECT 'PRICE', COUNT(*) FROM VEHICLES WHERE PRICE IS NULL
UNION ALL
SELECT 'YEAR', COUNT(*) FROM VEHICLES WHERE YEAR IS NULL
UNION ALL
SELECT 'REGION_ID', COUNT(*) FROM VEHICLES WHERE REGION_ID IS NULL;

-- 12. Estadísticas generales
SELECT 
   COUNT(*) AS TOTAL_VEHICULOS,
   COUNT(DISTINCT MANUFACTURER_ID) AS FABRICANTES_UNICOS,
   COUNT(DISTINCT REGION_ID) AS REGIONES_UNICAS,
   ROUND(AVG(PRICE), 2) AS PRECIO_PROMEDIO_GLOBAL,
   ROUND(MIN(PRICE), 2) AS PRECIO_MINIMO,
   ROUND(MAX(PRICE), 2) AS PRECIO_MAXIMO,
   MIN(YEAR) AS AÑO_MAS_ANTIGUO,
   MAX(YEAR) AS AÑO_MAS_RECIENTE
FROM VEHICLES
WHERE PRICE IS NOT NULL AND PRICE > 0;
