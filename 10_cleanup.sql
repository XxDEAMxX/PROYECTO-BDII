-- =====================================================
-- SCRIPT: 10_cleanup.sql
-- PROPOSITO: Scripts de limpieza y mantenimiento
-- AUTOR: Daniel Arevalo - Alex Hernandez
-- FECHA: Junio 2025
-- =====================================================

-- Script para limpiar datos de prueba (USAR CON PRECAUCIÓN)
PROMPT *** SCRIPT DE LIMPIEZA - USAR CON PRECAUCIÓN ***
PROMPT Este script eliminará todos los datos de las tablas
PROMPT Presione Ctrl+C para cancelar si no desea continuar
PROMPT 

-- Desactivar constraints temporalmente para el borrado
ALTER TABLE VEHICLES DISABLE CONSTRAINT FK_VEHICLE_REGION;
ALTER TABLE VEHICLES DISABLE CONSTRAINT FK_VEHICLE_MANUFACTURER;
ALTER TABLE VEHICLES DISABLE CONSTRAINT FK_VEHICLE_CONDITION;
ALTER TABLE VEHICLES DISABLE CONSTRAINT FK_VEHICLE_CYLINDERS;
ALTER TABLE VEHICLES DISABLE CONSTRAINT FK_VEHICLE_FUEL;
ALTER TABLE VEHICLES DISABLE CONSTRAINT FK_VEHICLE_TITLE;
ALTER TABLE VEHICLES DISABLE CONSTRAINT FK_VEHICLE_TRANSMISSION;
ALTER TABLE VEHICLES DISABLE CONSTRAINT FK_VEHICLE_DRIVE;
ALTER TABLE VEHICLES DISABLE CONSTRAINT FK_VEHICLE_SIZE;
ALTER TABLE VEHICLES DISABLE CONSTRAINT FK_VEHICLE_TYPE;
ALTER TABLE VEHICLES DISABLE CONSTRAINT FK_VEHICLE_COLOR;

-- Limpiar datos en orden inverso de dependencias
TRUNCATE TABLE VEHICLES;
TRUNCATE TABLE REGIONS;
TRUNCATE TABLE MANUFACTURERS;
TRUNCATE TABLE CONDITIONS;
TRUNCATE TABLE CYLINDERS;
TRUNCATE TABLE FUELS;
TRUNCATE TABLE TITLE_STATUSES;
TRUNCATE TABLE TRANSMISSIONS;
TRUNCATE TABLE DRIVES;
TRUNCATE TABLE SIZES;
TRUNCATE TABLE TYPES;
TRUNCATE TABLE PAINT_COLORS;

-- Reactivar constraints
ALTER TABLE VEHICLES ENABLE CONSTRAINT FK_VEHICLE_REGION;
ALTER TABLE VEHICLES ENABLE CONSTRAINT FK_VEHICLE_MANUFACTURER;
ALTER TABLE VEHICLES ENABLE CONSTRAINT FK_VEHICLE_CONDITION;
ALTER TABLE VEHICLES ENABLE CONSTRAINT FK_VEHICLE_CYLINDERS;
ALTER TABLE VEHICLES ENABLE CONSTRAINT FK_VEHICLE_FUEL;
ALTER TABLE VEHICLES ENABLE CONSTRAINT FK_VEHICLE_TITLE;
ALTER TABLE VEHICLES ENABLE CONSTRAINT FK_VEHICLE_TRANSMISSION;
ALTER TABLE VEHICLES ENABLE CONSTRAINT FK_VEHICLE_DRIVE;
ALTER TABLE VEHICLES ENABLE CONSTRAINT FK_VEHICLE_SIZE;
ALTER TABLE VEHICLES ENABLE CONSTRAINT FK_VEHICLE_TYPE;
ALTER TABLE VEHICLES ENABLE CONSTRAINT FK_VEHICLE_COLOR;

-- Reiniciar secuencias
DROP SEQUENCE SEQ_VEHICLES_ID;
DROP SEQUENCE SEQ_REGIONS_ID;
DROP SEQUENCE SEQ_MANUFACTURERS_ID;
DROP SEQUENCE SEQ_CONDITIONS_ID;
DROP SEQUENCE SEQ_CYLINDERS_ID;
DROP SEQUENCE SEQ_FUELS_ID;
DROP SEQUENCE SEQ_TITLE_STATUSES_ID;
DROP SEQUENCE SEQ_TRANSMISSIONS_ID;
DROP SEQUENCE SEQ_DRIVES_ID;
DROP SEQUENCE SEQ_SIZES_ID;
DROP SEQUENCE SEQ_TYPES_ID;
DROP SEQUENCE SEQ_PAINT_COLORS_ID;

-- Recrear secuencias
CREATE SEQUENCE SEQ_VEHICLES_ID START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE SEQ_REGIONS_ID START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE SEQ_MANUFACTURERS_ID START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE SEQ_CONDITIONS_ID START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE SEQ_CYLINDERS_ID START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE SEQ_FUELS_ID START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE SEQ_TITLE_STATUSES_ID START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE SEQ_TRANSMISSIONS_ID START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE SEQ_DRIVES_ID START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE SEQ_SIZES_ID START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE SEQ_TYPES_ID START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE SEQ_PAINT_COLORS_ID START WITH 1 INCREMENT BY 1 NOCACHE;

COMMIT;

PROMPT *** LIMPIEZA COMPLETADA ***
PROMPT Todas las tablas han sido vaciadas y las secuencias reiniciadas

-- =====================================================
-- SCRIPTS DE MANTENIMIENTO
-- =====================================================

-- Script para actualizar estadísticas
PROMPT 
PROMPT === ACTUALIZANDO ESTADÍSTICAS ===
EXEC DBMS_STATS.GATHER_SCHEMA_STATS('CARS_USER');

-- Script para verificar integridad
PROMPT 
PROMPT === VERIFICANDO INTEGRIDAD REFERENCIAL ===
SELECT 
   COUNT(*) AS VEHICULOS_SIN_REGION
FROM VEHICLES v
WHERE v.REGION_ID IS NOT NULL 
  AND NOT EXISTS (SELECT 1 FROM REGIONS r WHERE r.ID = v.REGION_ID);

SELECT 
   COUNT(*) AS VEHICULOS_SIN_FABRICANTE
FROM VEHICLES v
WHERE v.MANUFACTURER_ID IS NOT NULL 
  AND NOT EXISTS (SELECT 1 FROM MANUFACTURERS m WHERE m.ID = v.MANUFACTURER_ID);

-- Script para analizar espacio utilizado
PROMPT 
PROMPT === ANÁLISIS DE ESPACIO ===
SELECT 
   SEGMENT_NAME AS TABLA,
   ROUND(BYTES/1024/1024, 2) AS MB_UTILIZADOS
FROM USER_SEGMENTS
WHERE SEGMENT_TYPE = 'TABLE'
ORDER BY BYTES DESC;
